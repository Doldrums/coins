import 'package:crypto_currency_repository/crypto_currency_repository.dart'
    as crypto_currency_repository;
import 'package:freezed_annotation/freezed_annotation.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'coin.freezed.dart';

// optional: Since our Person class is serializable, we must add this line.
// But if Person was not serializable, we could skip it.
part 'coin.g.dart';

@freezed
class Coin with _$Coin {
  const factory Coin({
    required String id,
    required String symbol,
    required String name,
  }) = _Coin;

  factory Coin.fromJson(Map<String, Object?> json) => _$CoinFromJson(json);

  factory Coin.fromRepository(
          crypto_currency_repository.CryptoCurrency cryptoCurrency) =>
      Coin(
        id: cryptoCurrency.id,
        symbol: cryptoCurrency.symbol,
        name: cryptoCurrency.name,
      );

  static const empty = Coin(
    id: '',
    symbol: '',
    name: '',
  );
}
